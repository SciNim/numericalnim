nimTitle	optimize	numericalnim/optimize.html	module src/numericalnim/optimize		0
nim	steepest_descent	numericalnim/optimize.html#steepest_descent,proc(float64),float64,float64,float64,Natural	proc steepest_descent(deriv: proc (x: float64): float64; start: float64;\n                 gamma: float64 = 0.01; precision: float64 = 0.00001;\n                 max_iters: Natural = 1000): float64		62
nim	conjugate_gradient	numericalnim/optimize.html#conjugate_gradient,Tensor[T],Tensor[T],Tensor[T],float64	proc conjugate_gradient[T](A, b, x_0: Tensor[T]; tolerance: float64): Tensor[T]		96
nim	newtons	numericalnim/optimize.html#newtons,proc(float64),proc(float64),float64,float64,Natural	proc newtons(f: proc (x: float64): float64; deriv: proc (x: float64): float64;\n        start: float64; precision: float64 = 0.00001; max_iters: Natural = 1000): float64		135
nim	secant	numericalnim/optimize.html#secant,proc(float64),array[,float64],float64,Natural	proc secant(f: proc (x: float64): float64; start: array[2, float64];\n       precision: float64 = 0.00001; max_iters: Natural = 1000): float64		166
nim	Armijo	numericalnim/optimize.html#Armijo	LineSearchCriterion.Armijo		187
nim	Wolfe	numericalnim/optimize.html#Wolfe	LineSearchCriterion.Wolfe		187
nim	WolfeStrong	numericalnim/optimize.html#WolfeStrong	LineSearchCriterion.WolfeStrong		187
nim	NoLineSearch	numericalnim/optimize.html#NoLineSearch	LineSearchCriterion.NoLineSearch		187
nim	LineSearchCriterion	numericalnim/optimize.html#LineSearchCriterion	enum LineSearchCriterion		187
nim	OptimOptions	numericalnim/optimize.html#OptimOptions	object OptimOptions		191
nim	StandardOptions	numericalnim/optimize.html#StandardOptions	object StandardOptions		197
nim	LevMarqOptions	numericalnim/optimize.html#LevMarqOptions	object LevMarqOptions		198
nim	LBFGSOptions	numericalnim/optimize.html#LBFGSOptions	object LBFGSOptions		200
nim	optimOptions	numericalnim/optimize.html#optimOptions,U,U,bool,int,LineSearchCriterion	proc optimOptions[U](tol: U = U(0.000001); alpha: U = U(1); fastMode: bool = false;\n                maxIterations: int = 10000;\n                lineSearchCriterion: LineSearchCriterion = NoLineSearch): OptimOptions[\n    U, StandardOptions]		203
nim	steepestDescentOptions	numericalnim/optimize.html#steepestDescentOptions,U,U,bool,int,LineSearchCriterion	proc steepestDescentOptions[U](tol: U = U(0.000001); alpha: U = U(0.001);\n                          fastMode: bool = false; maxIterations: int = 10000;\n    lineSearchCriterion: LineSearchCriterion = NoLineSearch): OptimOptions[U,\n    StandardOptions]		217
nim	newtonOptions	numericalnim/optimize.html#newtonOptions,U,U,bool,int,LineSearchCriterion	proc newtonOptions[U](tol: U = U(0.000001); alpha: U = U(1); fastMode: bool = false;\n                 maxIterations: int = 10000;\n                 lineSearchCriterion: LineSearchCriterion = NoLineSearch): OptimOptions[\n    U, StandardOptions]		231
nim	bfgsOptions	numericalnim/optimize.html#bfgsOptions,U,U,bool,int,LineSearchCriterion	proc bfgsOptions[U](tol: U = U(0.000001); alpha: U = U(1); fastMode: bool = false;\n               maxIterations: int = 10000;\n               lineSearchCriterion: LineSearchCriterion = NoLineSearch): OptimOptions[\n    U, StandardOptions]		245
nim	lbfgsOptions	numericalnim/optimize.html#lbfgsOptions,int,U,U,bool,int,LineSearchCriterion	proc lbfgsOptions[U](savedIterations: int = 10; tol: U = U(0.000001);\n                alpha: U = U(1); fastMode: bool = false;\n                maxIterations: int = 10000;\n                lineSearchCriterion: LineSearchCriterion = NoLineSearch): OptimOptions[\n    U, LBFGSOptions[U]]		259
nim	levmarqOptions	numericalnim/optimize.html#levmarqOptions,U,U,U,bool,int,LineSearchCriterion	proc levmarqOptions[U](lambda0: U = U(1); tol: U = U(0.000001); alpha: U = U(1);\n                  fastMode: bool = false; maxIterations: int = 10000;\n                  lineSearchCriterion: LineSearchCriterion = NoLineSearch): OptimOptions[\n    U, LevMarqOptions[U]]		275
nim	vectorNorm	numericalnim/optimize.html#vectorNorm,Tensor[T]	proc vectorNorm[T](v: Tensor[T]): T		294
nim	line_search	numericalnim/optimize.html#line_search,U,Tensor[T],Tensor[U],proc(Tensor[U]),LineSearchCriterion,bool	proc line_search[U, T](alpha: var U; p: Tensor[T]; x0: Tensor[U];\n                  f: proc (x: Tensor[U]): T; criterion: LineSearchCriterion;\n                  fastMode: bool = false)		304
nim	steepestDescent	numericalnim/optimize.html#steepestDescent,proc(Tensor[U]),Tensor[U],OptimOptions[U,StandardOptions],proc(Tensor[U])	proc steepestDescent[U; T: not Tensor](f: proc (x: Tensor[U]): T; x0: Tensor[U];\n    options: OptimOptions[U, StandardOptions] = steepestDescentOptions[U]();\n    analyticGradient: proc (x: Tensor[U]): Tensor[T] = nil): Tensor[U]		352
nim	newton	numericalnim/optimize.html#newton,proc(Tensor[U]),Tensor[U],OptimOptions[U,StandardOptions],proc(Tensor[U])	proc newton[U; T: not Tensor](f: proc (x: Tensor[U]): T; x0: Tensor[U]; options: OptimOptions[\n    U, StandardOptions] = newtonOptions[U]();\n                         analyticGradient: proc (x: Tensor[U]): Tensor[T] = nil): Tensor[\n    U]		382
nim	bfgs_old	numericalnim/optimize.html#bfgs_old,proc(Tensor[U]),Tensor[U],U,U,bool,proc(Tensor[U])	proc bfgs_old[U; T: not Tensor](f: proc (x: Tensor[U]): T; x0: Tensor[U];\n                           alpha: U = U(1); tol: U = U(0.000001);\n                           fastMode: bool = false; analyticGradient: proc (\n    x: Tensor[U]): Tensor[T] = nil): Tensor[U]		414
nim	bfgs	numericalnim/optimize.html#bfgs,proc(Tensor[U]),Tensor[U],OptimOptions[U,StandardOptions],proc(Tensor[U])	proc bfgs[U; T: not Tensor](f: proc (x: Tensor[U]): T; x0: Tensor[U]; options: OptimOptions[\n    U, StandardOptions] = bfgsOptions[U]();\n                       analyticGradient: proc (x: Tensor[U]): Tensor[T] = nil): Tensor[\n    U]		458
nim	lbfgs	numericalnim/optimize.html#lbfgs,proc(Tensor[U]),Tensor[U],OptimOptions[U,LBFGSOptions[U]],proc(Tensor[U])	proc lbfgs[U; T: not Tensor](f: proc (x: Tensor[U]): T; x0: Tensor[U]; options: OptimOptions[\n    U, LBFGSOptions[U]] = lbfgsOptions[U]();\n                        analyticGradient: proc (x: Tensor[U]): Tensor[T] = nil): Tensor[\n    U]		547
nim	levmarq	numericalnim/optimize.html#levmarq,proc(Tensor[U],U),Tensor[U],Tensor[U],Tensor[T: not Tensor],OptimOptions[U,LevMarqOptions[U]],Tensor[T: not Tensor]	proc levmarq[U; T: not Tensor](f: proc (params: Tensor[U]; x: U): T;\n                          params0: Tensor[U]; xData: Tensor[U];\n                          yData: Tensor[T]; options: OptimOptions[U,\n    LevMarqOptions[U]] = levmarqOptions[U]();\n                          yError: Tensor[T] = ones_like(yData)): Tensor[U]		610
nim	paramUncertainties	numericalnim/optimize.html#paramUncertainties,Tensor[U],proc(Tensor[U],U),Tensor[U],Tensor[T],Tensor[T]	proc paramUncertainties[U; T](params: Tensor[U];\n                         fitFunc: proc (params: Tensor[U]; x: U): T;\n                         xData: Tensor[U]; yData: Tensor[T]; yError: Tensor[T];\n                         returnFullCov = false): Tensor[T]		681
heading	Optimization	numericalnim/optimize.html#optimization	 Optimization		0
heading	Optimization	numericalnim/optimize.html#optimization-optimization	  Optimization		0
heading	Curve fitting	numericalnim/optimize.html#optimization-curve-fitting	  Curve fitting		0
